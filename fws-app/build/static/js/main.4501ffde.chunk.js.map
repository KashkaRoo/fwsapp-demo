{"version":3,"sources":["components/NavBar.js","components/Search.js","components/UpdateOrganism.js","components/TaxSyn.js","components/Results.js","components/Add.js","components/BulkAdd.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","helpOpen","handleHelpOpen","setState","handleHelpClose","AppBar","postiion","style","this","props","database","backgroundImage","Toolbar","Typography","color","flex","Button","disableElevation","variant","startIcon","float","backgroundColor","onClick","Dialog","fullWidth","maxWidth","open","aria-labelledby","DialogTitle","id","DialogContent","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","className","ExpansionPanelDetails","src","alt","DialogActions","React","Component","Search","searchTerm","field","fields","databases","value","label","handleChange","k","v","apiCall","address","fetch","then","response","json","data","recordsets","setAppFields","catch","error","alert","res","undefined","getLastWD","WD_Num","getLastNFWFL_Num","NFWFL_Num","getLastCrim","CRIM_Num","setOrganismFields","e","COLUMN_NAME","target","setAppDB","TextField","select","size","onChange","handleDBChange","SelectProps","native","width","marginBottom","marginTop","map","option","key","InputLabelProps","shrink","onKeyPress","handleSearch","endIcon","loading","CircularProgress","UpdateOrganism","selectedOrganism","editedOrganism","relatedHerp","relatedXy","relatedCrim","organismFieldList","organisms","mainDialogOpen","confirmOpen","unsavedOpen","handleOpenMainDialog","handleUnsavedClose","handleUnsavedOpen","isEquivalent","handleCloseMainDialog","handleDiscard","conf","handleSelectedOrganism","handleEditOrganism","fieldName","handleConfirmOpen","findRelatedSpecimen","handleConfirmClose","handleUpdateOrganism","organismID","putURL","APIURL","method","body","JSON","stringify","headers","code","originalError","info","message","dialogContent","scrollIntoView","behavior","block","a","b","aProps","Object","getOwnPropertyNames","bProps","length","i","propName","URL","keys","alertmessage","severity","ref","node","Collapse","in","Alert","action","IconButton","aria-label","closeAlert","fontSize","Autocomplete","disableClearable","options","getOptionLabel","Class","Order","Family","Common_Name","optionLabel","Subclass","Suborder","Binomial_Nomenclature","Subspecies","event","renderInput","params","getOrganismList","disabled","paddingBottom","aria-describedby","autoFocus","DialogContentText","TaxSyn","dialogOpen","closeAndClear","Results","selectedSpecimen","editedSelectedSpecimen","deleteFileOpen","delFile","deleteSpecimenOpen","tableStatePersist","searchText","filterList","columns","files","specimenFiles","handleClickOpen","specimen","getFiles","handleEditsSave","handleClose","handleOnChange","handleUpdate","handleFileUpload","Specimen_ID","isOrganism","tableState","getSearchText","getColumns","columnNames","c","push","displayColumns","j","includes","name","display","hasOwnProperty","sortDirection","ID","console","log","formData","FormData","PUTURL","append","retrieveFile","fileName","window","deleteFile","closeFileDelete","openFileDelete","deleteSpecimen","closeSpecimenDelete","openSpecimenDelete","title","selectableRows","disableToolbarSelect","onRowClick","rowData","rowMeta","rowState","dataIndex","onRowsDelete","onTableChange","titleRef","defaultValue","onBlur","handleFiles","bind","file","Add","newSpecimen","confirmDialogOpen","isEmpty","handleInput","handleAddNew","obj","lastWD","lastNFWFL_Num","lastCrim","helperText","BulkAdd","disableSave","bulkOpen","errorObj","bulkSpecimen","csvXyFields","csvCrimFields","csvHerpFields","handleBulkOpen","handleBulkClose","handleCSVParse","disableAndSave","handleBulkSave","bulkPreview","slice","href","download","onDataUploaded","render","type","App","DB","f","lastNFWFL","org","dropdownValue","searchValue","fetchURL","align","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4501ffde.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nexport default class NavBar extends React.Component {\r\n  state = {\r\n    helpOpen: false,\r\n  };\r\n\r\n  handleHelpOpen = () => {\r\n    this.setState({ helpOpen: true });\r\n  };\r\n  handleHelpClose = () => {\r\n    this.setState({ helpOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar postiion=\"static\" style={ this.props.database === \"Xylarium\" ? {backgroundImage: \"url(./wood.jpg)\"} : {backgroundImage: \"url(./snake.jpg)\"} }>\r\n          <Toolbar>\r\n            <Typography color=\"inherit\" style={{ flex: 1 }}>\r\n              FWSFDB Application\r\n            </Typography>\r\n            <Button\r\n              color=\"default\"\r\n              disableElevation\r\n              variant=\"outlined\"\r\n              startIcon={<HelpIcon />}\r\n              style={{ float: \"right\", backgroundColor: \"#FFFFFF\" }}\r\n              onClick={this.handleHelpOpen}\r\n            >\r\n              Help\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"md\"\r\n          open={this.state.helpOpen} //determines if dialog is open\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Help</DialogTitle>\r\n          <DialogContent>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"search_a_database\">\r\n                  <b>Search a database</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the database you would like to search\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/database.PNG\"\r\n                      alt=\"Database dropdown menu\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    2. Select the field to search by\r\n                    <br></br>\r\n                    <img src=\"./Help/field.PNG\" alt=\"Field dropdown menu\" />\r\n                  </p>\r\n                  <p>\r\n                    3. Enter a search term\r\n                    <br></br>\r\n                    <img src=\"./Help/search_box.PNG\" alt=\"Search text box\" />\r\n                  </p>\r\n                  <p>\r\n                    (<b>Note:</b> If no search term entered, the entire database\r\n                    will be returned!)\r\n                  </p>\r\n                  <p>\r\n                    4. Select the <b>SEARCH</b> button or press <b>Enter</b> on\r\n                    your keyboard\r\n                    <br></br>\r\n                    <img src=\"./Help/search.PNG\" alt=\"Search button\" />\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"add_a_specimen\">\r\n                  <b>Add a Specimen</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the database you would like to add a specimen to\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/database.PNG\"\r\n                      alt=\"Database dropdown menu\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    2. Select the button labeled <b>NEW</b>\r\n                    <br></br>\r\n                    <img src=\"./Help/new.PNG\" alt=\"New specimen button\" />\r\n                  </p>\r\n                  <p>\r\n                    3. (Optional) Search for or select an existing genus/species\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/gs_search.PNG\"\r\n                      alt=\"Genus and species search field\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    4. Enter specimen data into the form\r\n                    <br></br>\r\n                    <img src=\"./Help/add_new.PNG\" alt=\"Add new specimen form\" />\r\n                  </p>\r\n                  <p>\r\n                    5. Select <b>CONFIRM</b> after reviewing the specimen\r\n                    details\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/add_new2.PNG\"\r\n                      alt=\"Add new specimen form confirmation window\"\r\n                    />\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"bulk_upload\">\r\n                  <b>Add Multiple Specimen</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the database you would like to add specimen to\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/database.PNG\"\r\n                      alt=\"Database dropdown menu\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    2. Select the <b>BULK ADD</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/bulk_add.PNG\" alt=\"Bulk Add button\" />\r\n                  </p>\r\n                  <p>\r\n                    3. Select the <b>Browse...</b> button to open a file\r\n                    explorer\r\n                    <br></br>\r\n                    <img src=\"./Help/browse.PNG\" alt=\"Browse button\" />\r\n                  </p>\r\n                  <p>\r\n                    4. Navigate to, and select the <b>.csv</b> file containing\r\n                    the specimen data\r\n                  </p>\r\n                  <p>\r\n                    5. Select the <b>SAVE</b> button\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"view_specimen\">\r\n                  <b>View a Specimen</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. After searching the database, select the record to view\r\n                  </p>\r\n                  <p>\r\n                    2. The specimen's information will be displayed in form view\r\n                    <br></br>\r\n                    <img src=\"./Help/view_edit.PNG\" alt=\"View/Edit form\" />\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"edit_specimen\">\r\n                  <b>Edit a Specimen</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. After searching the database, select the record to edit\r\n                  </p>\r\n                  <p>\r\n                    2. The specimen's information will be displayed in form view\r\n                    <br></br>\r\n                    <img src=\"./Help/view_edit.PNG\" alt=\"View/Edit form\" />\r\n                  </p>\r\n                  <p>3. Make necessary changes to the specimen data</p>\r\n                  <p>\r\n                    4. Select the <b>CONFIRM SAVE</b> button to save the changes\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/view_edit2.PNG\"\r\n                      alt=\"View/Edit form confirmation window\"\r\n                    />\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"update_scientific_name\">\r\n                  <b>View Taxonomic Synonyms</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>TAXONOMIC SYNONYMS</b> button\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/tax_syn.PNG\"\r\n                      alt=\"Taxonomic Synonyms button\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    2. Select the field to search by\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/tax_syn4.PNG\"\r\n                      alt=\"Taxonomic Synonym search field\"\r\n                    />\r\n                  </p>\r\n                  <p>\r\n                    3. Enter a search term\r\n                    <br></br>\r\n                    <img src=\"./Help/search_box.PNG\" alt=\"Search text box\" />\r\n                  </p>\r\n                  <p>\r\n                    4. Select the <b>SEARCH</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/search.PNG\" alt=\"Search button\" />\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"filter_search_results\">\r\n                  <b>Filter Search Results</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>Filter Table</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/filter.PNG\" alt=\"Filter icon\" />\r\n                  </p>\r\n                  <p>\r\n                    2. Select a field to filter by to display a list of options\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/filter_results.PNG\"\r\n                      alt=\"Filter table options pane\"\r\n                    />\r\n                  </p>\r\n                  <p>3. Select an option from the dropdown list</p>\r\n                  <p>\r\n                    4. Click outside the <b>Filter Table</b> window to return to\r\n                    filtered results\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"select_columns\">\r\n                  <b>Select Fields to Display</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>View Columns</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/columns.PNG\" alt=\"View Columns icon\" />\r\n                  </p>\r\n                  <p>\r\n                    2. Select the checkboxes for the fields to display in the\r\n                    table\r\n                    <br></br>\r\n                    <img\r\n                      src=\"./Help/show_columns.PNG\"\r\n                      alt=\"List of selectable columns\"\r\n                    />\r\n                  </p>\r\n                  <p>3. Select an option from the dropdown list</p>\r\n                  <p>\r\n                    4. Click outside the <b>View Columns</b> window to return to\r\n                    results\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"print\">\r\n                  <b>Print Search Results</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>Print</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/print.PNG\" alt=\"Print icon\" />\r\n                  </p>\r\n                  <p>\r\n                    2. Follow your system's dialogs to select preferred print\r\n                    settings\r\n                  </p>\r\n                  <p>\r\n                    3. Select <b>Print</b> within your system's print dialog\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"download_csv\">\r\n                  <b>Download Search Results (.csv)</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>Download CSV</b> button to open a file\r\n                    explorer\r\n                    <br></br>\r\n                    <img src=\"./Help/download.PNG\" alt=\"Download icon\" />\r\n                  </p>\r\n                  <p>\r\n                    2. Within the file explorer, select the save location and\r\n                    name\r\n                  </p>\r\n                  <p>\r\n                    3. Select <b>Save</b> to save the file\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className=\"sub_search\">\r\n                  <b>Search Within Results</b>\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                  <p>\r\n                    1. Select the <b>Search</b> button\r\n                    <br></br>\r\n                    <img src=\"./Help/sub_search1.PNG\" alt=\"Search icon\" />\r\n                  </p>\r\n                  <p>\r\n                    2. Enter the search term(s) into the search field that\r\n                    appears\r\n                    <br></br>\r\n                    <img src=\"./Help/sub_search2.PNG\" alt=\"Search text field\" />\r\n                  </p>\r\n                  <p>\r\n                    3. The results in the table will be automatically updated\r\n                  </p>\r\n                </Typography>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleHelpClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"../App.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default class Search extends React.Component {\r\n  state = {\r\n    searchTerm: \"\",\r\n    field: \"Binomial_Nomenclature\",\r\n    database: \"Herpetology\",\r\n    fields: [],\r\n    databases: [\r\n      {\r\n        value: \"Herpetology\",\r\n        label: \"Herpetology\",\r\n      },\r\n      {\r\n        value: \"Xylarium\",\r\n        label: \"Xylarium\",\r\n      },\r\n      {\r\n        value: \"Criminalistics\",\r\n        label: \"Criminalistics\",\r\n      },\r\n    ],\r\n };\r\n\r\n  constructor() {\r\n    super();\r\n    this.apiCall(\"herpetology\");\r\n  }\r\n\r\n  handleChange = (k, v) => this.setState({ [k]: v });\r\n\r\n  async apiCall(database) {\r\n    var address = \"https://fwsfl-demo.herokuapp.com/\"\r\n    await fetch(address + database + \"/getFields\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.recordsets) {\r\n          this.handleChange(\"fields\", data.recordsets[0]);\r\n          this.props.setAppFields(data.recordsets[0])\r\n        }\r\n        else {\r\n          this.handleChange(\"fields\", data[0]);\r\n          this.props.setAppFields(data[0]);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert (\"Something happened in fetch \" + address + database + \"/getFields : \" + error)\r\n    });\r\n\r\n      await fetch(address + \"xylarium/lastWD\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n\r\n        if(json.recordsets[0][0] !== undefined){\r\n        this.props.getLastWD(json.recordsets[0][0].WD_Num);\r\n        }\r\n        else{\r\n          this.props.getLastWD(\"No Previous Specimen - Check DB Connection\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert (\"Something happened in fetch \" + address + \"xylarium/lastWD: \" + error)\r\n    });\r\n\r\n    await fetch(address + \"herpetology/lastNFWFL_Num\")\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n\r\n      if(json[0] !== undefined){\r\n      this.props.getLastNFWFL_Num(json[0][0].NFWFL_Num);\r\n      }\r\n      else{\r\n        this.props.getLastNFWFL_Num(\"No Previous Herpetology Specimen - Check DB Connection\");\r\n      }\r\n    })\r\n    .catch(error => {\r\n      alert (\"Something happened in fetch \" + address + \"herpetology/lastNFWFL_Num: \" + error)\r\n  });\r\n\r\n  await fetch(address + \"criminalistics/lastCrim\")\r\n  .then((res) => res.json())\r\n  .then((json) => {\r\n\r\n    if(json.recordsets[0][0] !== undefined){\r\n    this.props.getLastCrim(json.recordsets[0][0].CRIM_Num);\r\n    }\r\n    else{\r\n      this.props.getLastCrim(\"No Previous Criminology Specimen - Check DB Connection\");\r\n    }\r\n  })\r\n  .catch(error => {\r\n    alert (\"Something happened in fetch \" + address + \"criminalistics/lastCrim: \" + error)\r\n});\r\n\r\n    await fetch(address + \"organism/getFields\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n        this.props.setOrganismFields(data);\r\n    })\r\n    .catch(error => {\r\n      alert (\"Something happened in fetch \" + address + \"organism/getFields : \" + error)\r\n  });\r\n\r\n  }\r\n\r\n  async handleDBChange(e) {\r\n    const { fields } = this.state;\r\n    this.handleChange(\"searchTerm\", \"\");\r\n    this.handleChange(\"field\", fields[0].COLUMN_NAME);\r\n    this.handleChange(\"data\", []);\r\n    this.handleChange(\"database\", e.target.value);\r\n    this.props.setAppDB(e.target.value);\r\n    await this.apiCall(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      database,\r\n      databases,\r\n      field,\r\n      fields,\r\n      searchTerm,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"searchInside\">\r\n        <TextField\r\n          id=\"db\"\r\n          select\r\n          size=\"small\"\r\n          label=\"Database\"\r\n          value={database}\r\n          onChange={(e) => this.handleDBChange(e)}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          style={{width: '440px', marginBottom: '15px', marginTop: '10px'}}\r\n          variant=\"outlined\"\r\n        >\r\n          {databases.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </TextField><br />\r\n\r\n        <TextField\r\n          id=\"field\"\r\n          select\r\n          size=\"small\"\r\n          label=\"Field\"\r\n          value={field}\r\n          onChange={(e) => this.handleChange(\"field\", e.target.value)}\r\n          SelectProps={{\r\n            native: true,\r\n          }}\r\n          InputLabelProps={{ shrink: true }}\r\n          style={{marginBottom: '15px'}}\r\n          variant=\"outlined\"\r\n        >\r\n          {/* hide fields from the Search Field selection list */}\r\n          {fields &&\r\n            fields.map((option) => {\r\n              if (\r\n                option.COLUMN_NAME === \"Location_ID\" ||\r\n                option.COLUMN_NAME === \"Locality_ID\" ||\r\n                option.COLUMN_NAME === \"Organism_ID\" ||\r\n                option.COLUMN_NAME === \"Specimen_ID\"\r\n              ) {\r\n                return \"\";\r\n              } else {\r\n                return (\r\n                  <option key={option.COLUMN_NAME} value={option.COLUMN_NAME}>\r\n                    {option.COLUMN_NAME}\r\n                  </option>\r\n                );\r\n              }\r\n            })}\r\n        </TextField>\r\n        <TextField\r\n          id=\"searchTerm\"\r\n          label=\"Search\"\r\n          size=\"small\"\r\n          style={{marginBottom: '15px'}}\r\n          value={searchTerm}\r\n          onChange={(e) => this.handleChange(\"searchTerm\", e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              this.props.handleSearch(field, searchTerm);\r\n            }\r\n          }}\r\n          variant=\"outlined\"\r\n        /><br />\r\n        \r\n        <Button\r\n          onClick={(e) => this.props.handleSearch(field, searchTerm)}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          endIcon={<SearchIcon />}\r\n          style={{marginBottom: '15px'}}\r\n        >\r\n          Search \r\n          {this.props.loading && <CircularProgress size={24} />}\r\n        </Button>\r\n        \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LightBulb from '@material-ui/icons/EmojiObjects';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { JsonToTable } from \"react-json-to-table\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class UpdateOrganism extends React.Component {\r\n    state = {\r\n        selectedOrganism: {},\r\n        editedOrganism: {},\r\n        relatedHerp: [],\r\n        relatedXy: [],\r\n        relatedCrim: [],\r\n        organismFieldList: [],\r\n        organisms: [],\r\n        mainDialogOpen: false,\r\n        confirmOpen: false,\r\n        unsavedOpen: false,\r\n        alert: false,\r\n        error: \"\",\r\n    };\r\n\r\n    handleOpenMainDialog = () => {\r\n        this.setState({\r\n            mainDialogOpen: true,\r\n        })\r\n    }\r\n\r\n    handleUnsavedClose = () => {this.setState({ unsavedOpen: false})}\r\n    handleUnsavedOpen = () => {\r\n        if (!this.isEquivalent(this.state.selectedOrganism, this.state.editedOrganism)){\r\n            this.setState({\r\n                unsavedOpen: true,\r\n            })\r\n        }\r\n        else{\r\n            this.handleCloseMainDialog(true)\r\n        }\r\n    }\r\n\r\n    handleDiscard = () => {\r\n\t\tthis.handleUnsavedClose()\r\n\t\tlet conf = true\r\n\t\tthis.handleCloseMainDialog(conf)\r\n\t}\r\n\r\n    handleCloseMainDialog = (conf) => {\r\n        if (this.isEquivalent(this.state.selectedOrganism, this.state.editedOrganism)){\r\n            this.setState({\r\n                mainDialogOpen: false,\r\n                selectedOrganism: {},\r\n                editedOrganism: {}\r\n            });   \r\n        }\r\n        if (conf){ //if user has elected to discard\r\n            this.setState({\r\n                mainDialogOpen: false,\r\n                selectedOrganism: {},\r\n                editedOrganism: {},\r\n                alert: false\r\n            }); \r\n        }\r\n    }\r\n\r\n    handleSelectedOrganism = (v) => {\r\n        this.setState({\r\n            selectedOrganism: {...v},\r\n            editedOrganism: {...v}\r\n        })\r\n    }\r\n\r\n    handleEditOrganism = (e, fieldName) => {\r\n        if (fieldName) {\r\n                this.setState({\r\n                    editedOrganism: {\r\n                        ...this.state.editedOrganism,\r\n                        [fieldName]: e.target.value\r\n                    }\r\n                });\r\n\t\t}\r\n    }\r\n\r\n    async getOrganismList (e) {\r\n        var URL = this.props.APIURL + \"organism/auto/\" + e.target.value;\r\n        if (e.target.value) {\r\n            await fetch(URL)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n              if (json.length > 0){\r\n                var keys = Object.getOwnPropertyNames(json[0]);\r\n                this.setState({\r\n                    organisms: json,\r\n                    organismFieldList: keys,\r\n                  });\r\n              }\r\n            })\r\n            .catch(error => {\r\n                alert (\"Something happened in fetch \" + URL + \" : \" + error)\r\n            }); \r\n        } \r\n      };\r\n\r\n    async findRelatedSpecimen (organismID) {\r\n        var URL =\r\n\t\tthis.props.APIURL +\r\n\t\t\"organism\" +\r\n        \"/related/\" + organismID;\r\n\r\n        await fetch(URL)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            this.setState({\r\n                relatedHerp: json[0],\r\n                relatedXy: json[1],\r\n                relatedCrim: json[2]\r\n            })\r\n        })\r\n    }\r\n\r\n    //when user his the first 'save'\r\n    handleConfirmOpen = () => {\r\n        //get all related specimen & open confirmation dialog\r\n        if (!this.isEquivalent(this.state.selectedOrganism, this.state.editedOrganism)){\r\n            this.findRelatedSpecimen(this.state.editedOrganism[\"Organism_ID\"]);\r\n            this.setState({\r\n                confirmOpen: true\r\n            });\r\n        }\r\n        else{\r\n            this.handleCloseMainDialog(true)\r\n        }\r\n        \r\n    }\r\n\r\n    //when user hits 'Continue Editing'\r\n    handleConfirmClose = () => {this.setState({ confirmOpen: false})}\r\n\r\n    handleUpdateOrganism = () => {\r\n\t\tconst { editedOrganism } = this.state;\r\n\t\tvar organismID = editedOrganism[\"Organism_ID\"];\r\n            var putURL =\r\n            this.props.APIURL +\r\n            \"organism\" +\r\n            \"/update/\" + organismID;\r\n\r\n            fetch(putURL, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(editedOrganism),\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then((json) => {\r\n        \r\n                if (json.code === \"EREQUEST\"){\r\n                this.setState({\r\n                    error: json.originalError.info.message,\r\n                    alert: true\r\n                    })\r\n                }\r\n                else {\r\n                this.handleConfirmClose();\r\n                this.setState({\r\n                    selectedOrganism: editedOrganism,\r\n                    alert: true,\r\n                    error: \"\",\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert (\"Something happened in fetch \" + putURL + \" : \" + error)\r\n            }); \r\n        this.dialogContent.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'start'\r\n            });\r\n    }\r\n\r\n    isEquivalent = (a, b) => {\r\n\t\t// Create arrays of property names\r\n\t\tvar aProps = Object.getOwnPropertyNames(a);\r\n\t\tvar bProps = Object.getOwnPropertyNames(b);\r\n\t\r\n\t\t// If number of properties is different,\r\n\t\t// objects are not equivalent\r\n\t\tif (aProps.length !== bProps.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\t\tfor (var i = 0; i < aProps.length; i++) {\r\n\t\t\tvar propName = aProps[i];\r\n\t\t\t// If values of same property are not equal,\r\n\t\t\t// objects are not equivalent\r\n\t\t\tif (a[propName] !== b[propName]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If we made it this far, objects\r\n\t\t// are considered equivalent\r\n\t\treturn true;\r\n\t}\r\n\r\n    render() {\r\n        var alertmessage, severity;\r\n        if (this.state.error) {\r\n          alertmessage = this.state.error\r\n          severity = \"error\"\r\n        }\r\n        else {\r\n          alertmessage = \"Success!\"\r\n          severity = \"success\"\r\n        }\r\n\r\n        return (<div>\r\n                <Button\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    variant=\"outlined\"\r\n                    endIcon={<LightBulb />}\r\n                    style={{marginBottom: \"10px\"}}\r\n                    onClick={this.handleOpenMainDialog}\r\n                    >\r\n                    Update Scientific Name\r\n                </Button>\r\n                <Dialog \r\n                    fullWidth\r\n                    maxWidth=\"md\"\r\n                    open={this.state.mainDialogOpen} //determines if dialog is open\r\n                    aria-labelledby=\"form-dialog-title\" >\r\n                    <DialogTitle id=\"form-dialog-title\">Update Scientific Name </DialogTitle>\r\n                    <DialogContent>\r\n                    <div ref={node => {\r\n                        this.dialogContent = node;\r\n                        }}>\r\n                        <DialogContent>\r\n                            {/* Alert for to display received errors. */}\r\n                            <Collapse in={this.state.alert}>\r\n                            <Alert\r\n                                severity={severity}\r\n                                action={\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    onClick={this.closeAlert}\r\n                                >\r\n                                    <CloseIcon fontSize=\"inherit\" />\r\n                                </IconButton>\r\n                                }\r\n                            >\r\n                                {alertmessage}\r\n                            </Alert>\r\n                            </Collapse>\r\n                        <fieldset>\r\n                            <legend>Search:</legend>\r\n                            <Autocomplete\r\n                                disableClearable={true}\r\n                                id=\"combo-box-demo\"\r\n                                options={this.state.organisms}\r\n                                getOptionLabel={(option) => {\r\n                                if (\r\n                                    option.Class === null &&\r\n                                    option.Order === null &&\r\n                                    option.Family === null &&\r\n                                    option[\"Binomial_Nomenclature\"] === null &&\r\n                                    option.Common_Name === null\r\n                                ) {\r\n                                    return \"Unknown. Select for details.\";\r\n                                } else {\r\n                                }\r\n                                var optionLabel = \"\";\r\n                                if (option.Class) {\r\n                                    optionLabel += option.Class + \" \";\r\n                                }\r\n                                if (option.Subclass) {\r\n                                    optionLabel += option.Subclass + \" \";\r\n                                }\r\n                                if (option.Order) {\r\n                                    optionLabel += option.Order + \" \";\r\n                                }\r\n                                if (option.Suborder) {\r\n                                    optionLabel += option.Suborder + \" \";\r\n                                }\r\n                                if (option.Binomial_Nomenclature) {\r\n                                    optionLabel += option.Binomial_Nomenclature + \" \";\r\n                                }\r\n                                if (option.Family) {\r\n                                    optionLabel += option.Family + \" \";\r\n                                }\r\n                                if (option.Subspecies) {\r\n                                    optionLabel += option.Subspecies + \" \";\r\n                                }\r\n                                if (option.Common_Name) {\r\n                                    optionLabel += '\"' + option.Common_Name + '\"';\r\n                                }\r\n\r\n                                return optionLabel;\r\n                                }}\r\n                                onChange={(event, value) =>\r\n                                this.handleSelectedOrganism(value)\r\n                                }\r\n                                fullWidth\r\n                                renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Search by Class, Order, Family, Binomial Nomenclature\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={(e) => {\r\n                                    this.getOrganismList(e);\r\n                                    }}\r\n                                />\r\n                                )}\r\n                            />\r\n                        </fieldset>\r\n\r\n                        {Object.keys(this.state.selectedOrganism).map( (fieldName) => {\r\n                            if(fieldName===\"CREATED_BY\" || fieldName===\"CREATED_TS\" || fieldName===\"MODIFIED_BY\" || fieldName===\"MODIFIED_TS\" || fieldName===\"Organism_ID\"){\r\n                                return\"\"\r\n                            }else{\r\n                                return<TextField\r\n                                        key={fieldName}\r\n                                        disabled={fieldName === \"Organism_ID\" ? true : false}\r\n                                        id={fieldName}\r\n                                        label={fieldName}\r\n                                        value={this.state.editedOrganism[fieldName] \r\n                                        || \"\"}\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        style={{paddingBottom: \"25px\"}}\r\n                                        size=\"small\"\r\n                                        InputLabelProps={{ shrink: true }}\r\n                                        onChange={e => this.handleEditOrganism(e, fieldName)}\r\n                                          >\r\n                                </TextField>\r\n                                }      \r\n                            })\r\n                        }\r\n                    </DialogContent>\r\n                    </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleUnsavedOpen}\r\n                            color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                        <Button \r\n                            onClick={this.handleConfirmOpen}\r\n                            color=\"primary\">\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.confirmOpen}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Confirm your Changes\"}</DialogTitle>\r\n                <DialogContent>\r\n                    Changes in progess: \r\n                    {Object.keys(this.state.selectedOrganism).map( (fieldName) =>{\r\n                        if (this.state.selectedOrganism[fieldName] !== this.state.editedOrganism[fieldName]){\r\n                            return<div>\r\n                                <li>From <b>{fieldName}</b>: {this.state.selectedOrganism[fieldName] ? this.state.selectedOrganism[fieldName] : \"[empty]\"} ----{\">\"} <b>{fieldName}</b>: {this.state.editedOrganism[fieldName]}</li> \r\n                            </div>\r\n                        }\r\n                        return\"\"\r\n                    })}\r\n\r\n                    Your changes will affect the following specimen:\r\n                    \r\n                    {<JsonToTable json={this.state.relatedHerp} />}\r\n                    <br />\r\n                    {<JsonToTable json={this.state.relatedXy} />}\r\n                    <br />\r\n                    {<JsonToTable json={this.state.relatedCrim} />}\r\n\r\n \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleConfirmClose} color=\"primary\" autoFocus>\r\n                        Continue Editing\r\n                    </Button>\r\n                    <Button onClick={this.handleUpdateOrganism} color=\"primary\">\r\n                        Confirm Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\t\t  <Dialog\r\n\t\t\topen={this.state.unsavedOpen}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t>\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Navigating away from Unsaved Changes!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You are navigating away without saving these changes!\r\n\t\t\t{Object.keys(this.state.editedOrganism).map( (fieldName) =>{\r\n\t\t\t\tif (this.state.selectedOrganism[fieldName] !== this.state.editedOrganism[fieldName]){\r\n\t\t\t\t\treturn<div>\r\n\t\t\t\t\t\t<li>From <b>{fieldName}</b>: {this.state.selectedOrganism[fieldName]} ----{\">\"} <b>{fieldName}</b>: {this.state.editedOrganism[fieldName]}</li> \r\n\t\t\t\t\t</div>\r\n                }\r\n                return\"\"\r\n\t\t\t})}\r\n\t\t\t\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleDiscard} color=\"primary\" autoFocus>\r\n            Discard Changes\r\n          </Button>\r\n          <Button onClick={this.handleUnsavedClose} color=\"primary\">\r\n            Continue Editing\r\n          </Button>\r\n        </DialogActions>\r\n      \t</Dialog> \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport LightBulb from \"@material-ui/icons/EmojiObjects\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { JsonToTable } from \"react-json-to-table\";\r\n\r\nexport default class TaxSyn extends React.Component {\r\n  state = {\r\n    field: \"Class\",\r\n    dialogOpen: false,\r\n    searchTerm: \"\",\r\n    organisms: {},\r\n  };\r\n\r\n  handleChange = (k, v) => this.setState({ [k]: v });\r\n\r\n  handleSearch = () => {\r\n    const { field, searchTerm } = this.state;\r\n    var URL;\r\n    if (searchTerm === \"\") {\r\n      URL = this.props.APIURL + \"organism/history/\";\r\n    } else {\r\n      URL =\r\n      this.props.APIURL + \"organism/history/\" + field + \"/\" + searchTerm;\r\n    }\r\n    fetch(URL)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          organisms: json,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        alert (\"Something happened in fetch \" + URL + \" : \" + error)\r\n    }); \r\n  };\r\n\r\n\r\n  closeAndClear = () => {\r\n    this.setState({\r\n      dialogOpen: false,\r\n      organisms: {},\r\n      searchTerm: \"\",\r\n      field: \"Class\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { field, searchTerm, organisms } = this.state;\r\n    const {organismFieldList} = this.props;\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"outlined\"\r\n          endIcon={<LightBulb />}\r\n          onClick={(e) => this.handleChange(\"dialogOpen\", true)}\r\n          style={{marginBottom: \"10px\"}}\r\n        >\r\n          Taxonomic Synonyms\r\n        </Button>\r\n\r\n        <Dialog\r\n          fullWidth\r\n          maxWidth=\"lg\"\r\n          open={this.state.dialogOpen} //determines if dialog is open\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Taxonomic Synonyms</DialogTitle>\r\n          <DialogContent>\r\n            History of 'Update Scientific Name' changes: <br /><br />\r\n            <TextField\r\n              id=\"field\"\r\n              select\r\n              label=\"Field\"\r\n              value={field}\r\n              onChange={(e) => this.handleChange(\"field\", e.target.value)}\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n              InputLabelProps={{ shrink: true }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            >\r\n              {organismFieldList && organismFieldList.map((option) => {\r\n                if (\r\n                  option.COLUMN_NAME === \"CREATED_BY\" ||\r\n                  option.COLUMN_NAME === \"CREATED_TS\" ||\r\n                  option.COLUMN_NAME === \"MODIFIED_BY\" ||\r\n                  option.COLUMN_NAME === \"MODIFIED_TS\" ||\r\n                  option.COLUMN_NAME === \"Organism_ID\"\r\n                ) {\r\n                  return \"\";\r\n                } else {\r\n                  return (\r\n                    <option key={option.COLUMN_NAME} value={option.COLUMN_NAME}>\r\n                      {option.COLUMN_NAME}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </TextField>\r\n            <TextField\r\n              id=\"searchTerm\"\r\n              label=\"Search\"\r\n              value={searchTerm}\r\n              onChange={(e) => this.handleChange(\"searchTerm\", e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  this.handleSearch(e);\r\n                }\r\n              }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              onClick={(e) => this.handleSearch(e)}\r\n              color=\"primary\"\r\n              disableElevation\r\n              variant=\"outlined\"\r\n              endIcon={<SearchIcon />}\r\n            >\r\n              Search\r\n            </Button>\r\n            <br />\r\n            <JsonToTable json={organisms} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.closeAndClear} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport MUIDataTable from \"mui-datatables\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\n\r\nclass Results extends React.Component {\r\n\tstate = {\r\n\t\tselectedSpecimen: {},\r\n\t\teditedSelectedSpecimen: {},\r\n\t\topen: false,\r\n\t\tconfirmOpen: false,\r\n\t\tunsavedOpen: false,\r\n\t\tdeleteFileOpen: false,\r\n\t\tdelFile: \"\",\r\n\t\tdeleteSpecimenOpen: false,\r\n\t\ttableStatePersist: { //Dynamic collection of props that are needed between table refreshes.\r\n\t\t\tsearchText: '',\r\n\t\t\tfilterList: [],\r\n\t\t\tcolumns: [],\r\n\t\t},\r\n\t\talert: false,\r\n\t\terror: \"\",\r\n\t\tfiles: [],\r\n\t\tspecimenFiles: [],\r\n\t  }\r\n\r\n\t  // I really loathe how the event handlers for the various user flows through dialogs are organized. It's very difficult to follow & debug. \r\n\t  // If I had more time, I would definitely go back through these. \r\n\thandleUnsavedOpen = () => {\r\n\t\tif (this.isEquivalent(this.state.selectedSpecimen, this.state.editedSelectedSpecimen)){\r\n\t\t\tthis.setState({\r\n\t\t\t\topen: false,\r\n\t\t\t\terror: \"\",\r\n\t\t\t\talert: false,\r\n\t\t\t\tselectedSpecimen: {},\r\n\t\t\t\teditedSelectedSpecimen: {},\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tunsavedOpen: true\r\n\t\t})\r\n\t}\r\n\r\n\thandleUnsavedClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tunsavedOpen: false\r\n\t\t})\r\n\t}\r\n\t\r\n\thandleConfirmOpen = () => {\r\n\t\tthis.setState({\r\n\t\t\tconfirmOpen: true,\r\n\t\t\talert: false,\r\n\t\t\terror: \"\"\r\n\t\t})\r\n\t}\r\n\r\n\thandleConfirmClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tconfirmOpen: false\r\n\t\t})\r\n\t}\r\n\r\n\thandleClickOpen = (specimen) => {\r\n\t\tthis.getFiles(specimen)\r\n\t\tthis.setState({\r\n\t\t\topen: true\r\n\t\t})\r\n\t  };\r\n\r\n\thandleEditsSave = () => {\r\n\t\tif(!this.isEquivalent(this.state.selectedSpecimen, this.state.editedSelectedSpecimen) || this.state.files){\r\n\t\t\tthis.handleConfirmOpen()\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.handleUnsavedOpen()\r\n\t\t}\r\n\t};\r\n\r\n\thandleDiscard = () => {\r\n\t\tthis.handleUnsavedClose()\r\n\t\tlet conf = true\r\n\t\tthis.handleClose(conf)\r\n\t}\r\n\t\r\n\thandleClose = (conf) => {\r\n\t\tif (this.isEquivalent(this.state.selectedSpecimen, this.state.editedSelectedSpecimen)){\r\n\t\t\tthis.setState({\r\n\t\t\t\topen: false,\r\n\t\t\t\terror: \"\",\r\n\t\t\t\talert: false,\r\n\t\t\t\tselectedSpecimen: {},\r\n\t\t\t\teditedSelectedSpecimen: {},\r\n\t\t\t\tspecimenFiles: [],\r\n\t\t\t});\r\n\t\t\tthis.closeAlert();\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (conf) {\r\n\t\t\tthis.handleUnsavedClose()\r\n\t\t\tthis.setState({\r\n\t\t\t\topen: false,\r\n\t\t\t\terror: \"\",\r\n\t\t\t\talert: false,\r\n\t\t\t\tselectedSpecimen: {},\r\n\t\t\t\teditedSelectedSpecimen: {},\r\n\t\t\t\tspecimenFiles: [],\r\n\t\t\t});\r\n\t\t\tthis.closeAlert();\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn\r\n\t  };\r\n\r\n\thandleOnChange = (e, fieldName)  => {\r\n\t\t//keep track of input => editedSpec\r\n\t\tif (fieldName) {\r\n\t\t\tif (e.target.value === \"\"){ //might not need this anymore since the DB doesn't care if it's \"\" or null\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\teditedSelectedSpecimen: {\r\n\t\t\t\t\t\t...this.state.editedSelectedSpecimen,\r\n\t\t\t\t\t\t[fieldName]: null\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\teditedSelectedSpecimen: {\r\n\t\t\t\t\t\t...this.state.editedSelectedSpecimen,\r\n\t\t\t\t\t\t[fieldName]: e.target.value\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\thandleUpdate = async () =>{\r\n\t\tconst {editedSelectedSpecimen, selectedSpecimen, files} = this.state;\r\n\r\n\t\t\tvar putURL =\r\n\t\t\tthis.props.APIURL +\r\n\t\t\tthis.props.database +\r\n\t\t\t\"/update\";\r\n\t\t\tawait fetch(putURL, {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: JSON.stringify(editedSelectedSpecimen),\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-type\": \"application/json\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then((json) => {\r\n\t\t\r\n\t\t\t\tif (json.code === \"EREQUEST\"){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terror: json.originalError.info.message,\r\n\t\t\t\t\talert: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//check if file is being uploaded\r\n\t\t\t\t\tif (files){\r\n\t\t\t\t\t\tthis.handleFileUpload(selectedSpecimen.Specimen_ID)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.handleConfirmClose();\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\talert: true,\r\n\t\t\t\t\t\terror: \"\",\r\n\t\t\t\t\t\tselectedSpecimen: editedSelectedSpecimen,\r\n\t\t\t\t\t\tfiles: []\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.getFiles(this.state.selectedSpecimen)\r\n\t\t\t})\r\n\t\t\t.then(()=> {\r\n\t\t\t\tthis.props.handleSearch(this.props.field, this.props.searchTerm);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\talert (\"Something happened in fetch \" + putURL + \" : \" + error)\r\n\t\t\t});\r\n\t\tthis.dialogContent.scrollIntoView({ //returns the dialog scroll to top of the page where alert can be seen\r\n\t\t\tbehavior: 'smooth',\r\n\t\t\tblock: 'start'\r\n\t\t});\r\n\t} \r\n\r\n\tcloseAlert = () => {\r\n\t\tthis.setState({\r\n\t\t  alert: false,\r\n\t\t  error: \"\",\r\n\t\t})\r\n\t}\r\n\r\n\t/* ~~~              HELPER FUNCTIONS                ~~~ */\r\n\r\n\r\n\tisEquivalent = (a, b) => {\r\n\t\t// Create arrays of property names\r\n\t\tvar aProps = Object.getOwnPropertyNames(a);\r\n\t\tvar bProps = Object.getOwnPropertyNames(b);\r\n\t\r\n\t\t// If number of properties is different,\r\n\t\t// objects are not equivalent\r\n\t\tif (aProps.length !== bProps.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\r\n\t\tfor (var i = 0; i < aProps.length; i++) {\r\n\t\t\tvar propName = aProps[i];\r\n\t\t\t// If values of same property are not equal,\r\n\t\t\t// objects are not equivalent\r\n\t\t\tif (a[propName] !== b[propName]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If we made it this far, objects\r\n\t\t// are considered equivalent\r\n\t\treturn true;\r\n\t}\r\n\r\n\tisOrganism = (fieldName) => {\r\n\t\tif (fieldName === \"Class\" ||\r\n\t\t\tfieldName === \"Subclass\" ||\r\n\t\t\tfieldName === \"Order\" ||\r\n\t\t\tfieldName === \"Suborder\" ||\r\n\t\t\tfieldName === \"Family\" ||\r\n\t\t\tfieldName === \"Subfamily\" ||\r\n\t\t\tfieldName === \"Subgenus\" ||\r\n\t\t\tfieldName === \"Subspecies\" ||\r\n\t\t\tfieldName === \"Variety\" ||\r\n\t\t\tfieldName === \"Common_Name\" ||\r\n\t\t\tfieldName === \"Binomial_Nomenclature\" ||\r\n\t\t\tfieldName === \"Previous_Designation\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\thandleChange = (action, tableState) => {\r\n\t\tif(action !== 'propsUpdate') { //Store new tableStatePersist only if not updating props\r\n\t\t  this.setState({\r\n\t\t\ttableStatePersist: {\r\n\t\t\t  searchText: tableState.searchText,\r\n\t\t\t  filterList: tableState.filterList, //An array of filters for all columns\r\n\t\t\t  columns: tableState.columns //We can pull column-specific options from this array, like display and sortDirection\r\n\t\t\t},\r\n\t\t  });\r\n\t\t}\r\n\t  };\r\n\r\n\t  getSearchText = () => {\r\n\t\treturn this.state.tableStatePersist.searchText;\r\n\t  }\r\n\r\n\r\n\t\t//Return all columns, their props, and any current state-related changes\r\n\tgetColumns = () => {\r\n\t\t//Define all of the alert table's columns and their default props and options as per the mui-datatables documentation\r\n\t\t// column names passed in from Results fields\r\n\t\tconst columnNames = this.props.fields;\r\n\t\t// create array columns (array of objects) in order to customize default display options\r\n\t\tvar columns = [];\r\n\t\tfor (var i in columnNames) {\t\t// items in columnNames are ints\r\n\t\t\t//Disable columns that should not be visible to user: Organism_ID, Location_ID, Locality_ID\t\r\n\t\t\tif (columnNames[i] === \"Organism_ID\" || columnNames[i] === \"Location_ID\" || columnNames[i] === \"Locality_ID\") {\r\n\t\t\t\t//do nothing\r\n\t\t\t}\r\n\t\t\telse { //make fields available to display\r\n\t\t\t\tvar c = {};\r\n\t\t\t\tc[\"name\"] = columnNames[i]; \t// get the name associated with the current index, put it in an object, add it to columns array\r\n\t\t\t\tc[\"options\"] = {};\r\n\t\t\t\tcolumns.push(c);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// iterate over columns array\r\n\t\t// if an entry is not in the preset list, set display to FALSE to start with\r\n\t\tconst displayColumns = [\"NFWFL_Num\", \"WD_Num\", \"CRIM_Num\", \"Material\", \"Common_Name\", \"Sample_Location\", \"Binomial_Nomenclature\"];\r\n\t\tfor (var j in columns) {\r\n\t\t\tif(!displayColumns.includes(columns[j].name)) {\r\n\t\t\t\tcolumns[j].options.display = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Loop thru columns and assign all column-specific settings that need to persist thru a data refresh\r\n\t\tfor(let i = 0; i < columns.length; i++) {     \r\n\t\t//Assign the filter list to persist\r\n\t\tcolumns[i].options.filterList = this.state.tableStatePersist.filterList[i];\r\n\t\tif(this.state.tableStatePersist.columns[i] !== undefined) {\r\n\t\t\t//If 'display' has a value in tableStatePersist, assign that, or else leave it alone\r\n\t\t\tif(this.state.tableStatePersist.columns[i].hasOwnProperty('display'))\r\n\t\t\tcolumns[i].options.display = this.state.tableStatePersist.columns[i].display;\r\n\t\t\t//If 'sortDirection' has a value in tableStatePersist, assign that, or else leave it alone\r\n\t\t\tif(this.state.tableStatePersist.columns[i].hasOwnProperty('sortDirection')) {\r\n\t\t\t//The sortDirection prop only permits sortDirection for one column at a time\r\n\t\t\tif(this.state.tableStatePersist.columns[i].sortDirection !== 'none')\r\n\t\t\t\tcolumns[i].options.sortDirection = this.state.tableStatePersist.columns[i].sortDirection;\r\n\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn columns;\r\n\t}\r\n\r\n\tcloseAlert = () => {\r\n\t\tthis.setState({\r\n\t\t  alert: false,\r\n\t\t  error: undefined\r\n\t\t})\r\n\t  }\r\n\r\n\t  handleFiles(files){\r\n\t\tthis.setState({\r\n\t\t  files: files\r\n\t\t});\r\n\t  }\r\n\r\n\t  handleFileUpload = async (ID) => {\r\n\t\tconst files = this.state.files\r\n\t\tconsole.log(files)\r\n\t\tconst formData = new FormData()\r\n\t\tvar PUTURL = this.props.APIURL + \"upload/\" + this.props.database + \"/\" + ID\r\n\t\tconsole.log(PUTURL)\r\n\t\tconsole.log(files.length)\r\n\t\tlet i;\r\n\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\tformData.append('attachment', files[i])\r\n\t\t}\r\n\t\tconsole.log(formData)\r\n\r\n\t\tawait fetch(PUTURL, {\r\n\t\t  method: 'POST',\r\n\t\t  body: formData\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t  console.log(\"handleFileUpload POST response: \", data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t  console.error(error)\r\n\t\t})\r\n\t\t\r\n\t  }\r\n\r\n\tgetFiles = async (specimen) => {\r\n\t\tvar ID = specimen.Specimen_ID\r\n\t\tvar URL = this.props.APIURL + \"getFiles/\" + this.props.database + \"/\" + ID\r\n\t\tawait fetch(URL)\r\n\t\t.then(response => response.json())\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(\"getFiles fetch response: \", response)\r\n\t\t\tthis.setState({\r\n\t\t\t\tspecimenFiles: response\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\talert (error)\r\n\t\t});\r\n\t}\r\n\r\n\tretrieveFile = async (fileName) => {\r\n\t\tvar ID = this.selectedSpecimen.Specimen_ID\r\n\r\n\t\twindow.open(this.props.APIURL + \"Docs/\" + this.props.database + \"/\" + ID + \"/\" + fileName);\r\n\t}\r\n\r\n\tdeleteFile = async (fileName) => {\r\n\t\tvar ID = this.state.selectedSpecimen.Specimen_ID\r\n\t\t\r\n\t\tvar URL = this.props.APIURL + \"deleteFile/\" + this.props.database + \"/\" + ID + \"/\" + fileName\r\n\t\tawait fetch(URL)\r\n\t\t.then( res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tthis.getFiles(this.state.selectedSpecimen)\r\n\t\t\tthis.closeFileDelete()\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\talert (error)\r\n\t\t});\r\n\t}\r\n\r\n\topenFileDelete = (fileName) => {this.setState({deleteFileOpen: true, delFile: fileName})}\r\n\tcloseFileDelete = () => {this.setState({deleteFileOpen: false, delFile: \"\"})}\r\n\r\n\tdeleteSpecimen = async () => {\r\n\t\tconst {specimenFiles, selectedSpecimen} = this.state;\r\n\t\tconst {database, APIURL} = this.props;\r\n\t\tvar fileName;\r\n\t\t//delete files\r\n\t\tfor (fileName in specimenFiles) {\r\n\t\t\tthis.deleteFile(fileName);\r\n\t\t}\r\n\t\t//back up specimen?\r\n\t\t//delete specimen\r\n\t\tvar URL = APIURL + database + \"/delete/\" + selectedSpecimen.Specimen_ID;\r\n\t\tawait fetch(URL)\r\n\t\t.then( res => {\r\n\t\t\tconsole.log(res)\r\n\t\t\tthis.props.handleSearch(this.props.field, this.props.searchTerm);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tselectedSpecimen: {},\r\n\t\t\t\t\t\teditedSelectedSpecimen: {},\r\n\t\t\t\t\t\tfiles: [],\r\n\t\t\t\t\t\topen: false,\r\n\t\t\t\t\t\talert: false,\r\n\t\t\t\t\t})\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\talert (error)\r\n\t\t});\r\n\t\tthis.closeSpecimenDelete();\r\n\t}\r\n\r\n\topenSpecimenDelete = () => {this.setState({deleteSpecimenOpen: true})}\r\n\tcloseSpecimenDelete = () => {this.setState({deleteSpecimenOpen: false})}\r\n\r\n\r\n\trender() {\r\n\t\tconst { error, specimenFiles, delFile } = this.state;\r\n\t\tvar alertmessage, severity;\r\n\t\tif (error) {\r\n\t\t  alertmessage = error\r\n\t\t  severity = \"error\"\r\n\t\t}\r\n\t\telse {\r\n\t\t  alertmessage = \"Success!\"\r\n\t\t  severity = \"success\"\r\n\t\t}\r\n\t\t\r\n\t\r\n    return (\r\n      <div>\r\n        <MUIDataTable\r\n          title={\"Results\"}\r\n          data={this.props.data}\r\n          columns={this.getColumns()}\r\n          options={{\r\n\t\t\tselectableRows: 'single',\r\n\t\t\tdisableToolbarSelect: 'true',\r\n\t  \r\n\t\t\tonRowClick: (rowData, rowMeta, rowState) => {\t// !!! Bad things happen if you take rowData out of the params. Don't touch it. !!!\r\n\t\t\t  this.setState({\r\n\t\t\t\tselectedSpecimen: this.props.data[rowMeta.dataIndex],\t\t// use row meta data to access json data and grab the object associated with the row\r\n\t\t\t\teditedSelectedSpecimen: this.props.data[rowMeta.dataIndex],\r\n\t\t\t  });\r\n\t\t\t  this.getFiles(this.props.data[rowMeta.dataIndex]);\r\n\t\t\t  this.handleClickOpen(this.props.data[rowMeta.dataIndex])\r\n\t\t\t},\r\n\t  \r\n\t\t\tonRowsDelete: () => {\r\n\t\t\t  window.alert('Do we want to delete from table for printing? -- Not implemented at this time.');\r\n\t\t\t  return false;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// adjust onDownload to only download searched/filtered options - currently downloads everything searched for\r\n\t\t\t// https://github.com/gregnb/mui-datatables/blob/master/examples/on-download/index.js\r\n\t  \r\n\t\t\t  searchText: this.state.tableStatePersist.searchText,\r\n\t\t\t  onTableChange: (action, tableState) => this.handleChange(action, tableState),\r\n\t\t  }}\r\n        />\r\n\r\n\t\t<Dialog \r\n\t\t\tfullWidth={true}\r\n\t\t\tmaxWidth=\"md\"\r\n\t\t\topen={this.state.open} \r\n\t\t\taria-labelledby=\"form-dialog-title\" >\r\n        <DialogTitle id=\"form-dialog-title\" ref={this.titleRef}>View and Edit Specimen Details</DialogTitle>\r\n        <DialogContent>\r\n\t\t\t<div ref={node => {\r\n\t\t\t\tthis.dialogContent = node;\r\n\t\t\t\t}}>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t{/* Alert for to display received errors. */}\r\n\t\t\t\t\t<Collapse in={this.state.alert}>\r\n\t\t\t\t\t<Alert\r\n\t\t\t\t\t\tseverity={severity}\r\n\t\t\t\t\t\taction={\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={this.closeAlert}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CloseIcon fontSize=\"inherit\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{alertmessage}\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t\t</Collapse>\r\n\r\n\r\n\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t<legend><center>Attachments:</center></legend>\r\n\t\t\t\t\t\t{specimenFiles.map( (fileName) => {\r\n\t\t\t\t\t\t\treturn <div key={fileName}> \r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey={fileName}\r\n\t\t\t\t\t\t\tonClick={e => this.retrieveFile(fileName) }\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{fileName}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\t\t\taria-label=\"delete\" \r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={e => this.openFileDelete(fileName) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend><center>Updating these fields will only change this specimen. <br /><small> Use Update Scientific Designation to change many specimen at once.</small></center></legend>\r\n\t\t\t\t{Object.keys(this.state.selectedSpecimen).map( (fieldName) => {\r\n\t\t\t\t\tif (fieldName === \"Location_ID\" || fieldName === \"Locality_ID\" || fieldName === \"Organism_ID\"){\r\n\t\t\t\t\t\treturn\"\"\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.isOrganism(fieldName)){\r\n\t\t\t\t\t\treturn <div key={fieldName}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\tid={fieldName}\r\n\t\t\t\t\t\t\t\t\tlabel={fieldName}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.selectedSpecimen[fieldName]}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tstyle={{paddingBottom: \"25px\"}}\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tonBlur={e => this.handleOnChange(e, fieldName)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</TextField>\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\"\"\r\n\t\t\t\t})}\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t{Object.keys(this.state.selectedSpecimen).map( (fieldName) => {\r\n\t\t\t\t\tif (fieldName === \"Location_ID\" || fieldName === \"Locality_ID\" || fieldName === \"Organism_ID\" || fieldName ===\"Specimen_ID\"){\r\n\t\t\t\t\t\treturn\"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.isOrganism(fieldName)){\r\n\t\t\t\t\treturn <div key={fieldName}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\tdisabled={fieldName === \"Specimen_ID\" ? true : false}\r\n\t\t\t\t\t\t\t\t\tid={fieldName}\r\n\t\t\t\t\t\t\t\t\tlabel={fieldName}\r\n\t\t\t\t\t\t\t\t\tdefaultValue={this.state.selectedSpecimen[fieldName]}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tstyle={{paddingBottom: \"25px\"}}\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\r\n\t\t\t\t\t\t\t\t\tonBlur={e => this.handleOnChange(e, fieldName)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t\t</div>; \r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\"\"\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<fieldset>\r\n\t\t\t\t\t<legend><center>Upload:</center></legend>\r\n\t\t\t\t\t<DropzoneArea\r\n\t\t\t\t\t\tonChange={this.handleFiles.bind(this)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</div>\r\n\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={this.openSpecimenDelete} \r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete Specimen\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div style={{flex: '1 0 0'}} />\r\n\t\t\t\t<Button onClick={this.handleUnsavedOpen} \r\n\t\t\t\t\tcolor=\"primary\">\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={ this.handleEditsSave} color=\"primary\">\r\n\t\t\t\t\tSave\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n      \t</Dialog>\r\n\r\n\r\n\t\t<Dialog\r\n\t\t\topen={this.state.confirmOpen}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t>\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm your Changes\"}</DialogTitle>\r\n        <DialogContent>\r\n          \r\n            <b>Changes in progress: </b><br />\r\n\t\t\t<i>Attachments:</i>\r\n \t\t\t{this.state.files.map( (file) => {\r\n\t\t\t\t console.log(file.name)\r\n\t\t\t\treturn <div key={file.name}> \r\n\t\t\t\t<li>\r\n\t\t\t\t\t{file.name}\r\n\t\t\t\t</li>\r\n\t\t\t\t</div>\r\n\t\t\t})}\r\n\r\n\t\t\t{Object.keys(this.state.selectedSpecimen).map( (fieldName) =>{\r\n\t\t\t\tif (this.state.selectedSpecimen[fieldName] !== this.state.editedSelectedSpecimen[fieldName]){\r\n\t\t\t\t\treturn<div>\r\n\t\t\t\t\t\t<li>From <b>{fieldName}</b>: {this.state.selectedSpecimen[fieldName]} ----{\">\"} <b>{fieldName}</b>: {this.state.editedSelectedSpecimen[fieldName]}</li> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\treturn\"\"\r\n\t\t\t})}\r\n\t\t\t<br />\r\n\t\t\t<hr />\r\n\t\t\t<small><b>A Note:</b><br/>\r\n\t\t\tUpdates made to the following fields: <br/> <br/>\r\n\t\t\tBinomial Nomenclature, Class, Subclass, Order, Suborder, Family, Subfamily, <br/> Subgenus, Subspecies, Variety, Common Name, or Previous Designation<br /><br />\r\n\t\t\tWill <b>only</b> affect/reflect in this specimen. <br />\r\n\t\t\tTo change a scientific designation across multiple specimen, use the <b>Update Scientific Name</b> feature.</small>\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleConfirmClose} color=\"primary\" autoFocus>\r\n            Continue Editing\r\n          </Button>\r\n          <Button onClick={this.handleUpdate} color=\"primary\">\r\n            Confirm Save\r\n          </Button>\r\n        </DialogActions>\r\n      \t</Dialog>\r\n\r\n\t\t<Dialog\r\n\t\t\topen={this.state.unsavedOpen}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t>\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Navigating away from Unsaved Changes!\"}</DialogTitle>\r\n        <DialogContent>\r\n\t\t\t{Object.keys(this.state.selectedSpecimen).map( (fieldName) =>{\r\n\t\t\t\tif (this.state.selectedSpecimen[fieldName] !== this.state.editedSelectedSpecimen[fieldName]){\r\n\t\t\t\t\treturn<div>\r\n\t\t\t\t\t\t<li>From <b>{fieldName}</b>: {this.state.selectedSpecimen[fieldName]} ----{\">\"} <b>{fieldName}</b>: {this.state.editedSelectedSpecimen[fieldName]}</li> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\treturn\"\"\r\n\t\t\t})}\r\n\t\t\t\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleDiscard} color=\"primary\" autoFocus>\r\n            Discard Changes\r\n          </Button>\r\n          <Button onClick={this.handleUnsavedClose} color=\"primary\">\r\n            Continue Editing\r\n          </Button>\r\n        </DialogActions>\r\n      \t</Dialog>\r\n\r\n\t\t<Dialog\r\n\t\t\topen={this.state.deleteFileOpen}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t>\r\n        <DialogTitle id=\"alert-dialog-title\">Are you sure?</DialogTitle>\r\n        <DialogContent>\r\n\t\t\tAre you sure you want to delete <Button\r\n\t\t\t\t\t\t\tonClick={e => this.retrieveFile(delFile) }\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{delFile}\r\n\t\t\t\t\t\t\t</Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.closeFileDelete} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={e => this.deleteFile(delFile)} color=\"secondary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      \t</Dialog>\r\n\r\n\t\t<Dialog\r\n\t\t\topen={this.state.deleteSpecimenOpen}\r\n\t\t\taria-labelledby=\"alert-dialog-title\"\r\n\t\t\taria-describedby=\"alert-dialog-description\"\r\n\t\t>\r\n        <DialogTitle id=\"alert-dialog-title\">Are you sure?</DialogTitle>\r\n        <DialogContent>\r\n\t\t\tAre you sure you want to delete this specimen?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.closeSpecimenDelete} color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={e => this.deleteSpecimen()} color=\"secondary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      \t</Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\n\r\nclass Add extends Component {\r\n  state = {\r\n    alert: false,\r\n    error: \"\",\r\n    newSpecimen: {},\r\n    selectedOrganism: {},\r\n    open: false,\r\n    unsavedOpen: false,\r\n    organisms: [],\r\n    organismFieldList: [],\r\n    confirmDialogOpen: false,\r\n    files: [],\r\n  };\r\n\r\n  //when user clicks Add+ Button - opens main dialog\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  //closes main dialog - checks if trying to leave with unsaved changes\r\n  handleClose = () => {\r\n    if (this.isEmpty(this.state.newSpecimen)) {\r\n      this.handleDiscard(); //clears varialbes just 'cause\r\n    } else {\r\n      this.setState({\r\n        unsavedOpen: true, //opens Unsaved Changes Dialog\r\n      });\r\n    }\r\n  };\r\n\r\n  //closes the unsaved changes dialog\r\n  handleUnsavedClose = () => {\r\n    this.setState({ unsavedOpen: false });\r\n  };\r\n\r\n  handleDiscard = () => {\r\n    this.setState({\r\n      newSpecimen: {},\r\n      selectedOrganism: {},\r\n      unsavedOpen: false,\r\n      open: false,\r\n    });\r\n    this.closeAlert(); //closes & clears the success/fail alert at top of dialog\r\n  };\r\n\r\n  closeAlert = () => {\r\n    this.setState({\r\n      alert: false,\r\n      error: undefined,\r\n    });\r\n  };\r\n\r\n  //opens dialog for user to confirm changes - called from main dialog 'save' button\r\n  handleConfirmOpen = () => {\r\n    this.setState({ confirmDialogOpen: true });\r\n  };\r\n\r\n  //closes confirm dialog - called from continue button on confirm dialog\r\n  handleConfirmClose = () => {\r\n    this.setState({ confirmDialogOpen: false });\r\n  };\r\n\r\n  //takes from TextFields and puts in newSpecimen object onBlur\r\n  handleInput = (e, fieldName) => {\r\n    if (fieldName) {\r\n      if (e.target.value === \"\") {\r\n        this.setState({\r\n          newSpecimen: {\r\n            ...this.state.newSpecimen,\r\n            [fieldName]: null,\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          newSpecimen: {\r\n            ...this.state.newSpecimen,\r\n            [fieldName]: e.target.value,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //after confirmation save\r\n  handleAddNew = () => {\r\n    //get called when save is clicked in dialog\r\n    var putURL = this.props.APIURL + this.props.database + \"/update\";\r\n    fetch(putURL, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(this.state.newSpecimen),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((response) => response.json())\r\n      .then((json) => {\r\n        console.log(json)\r\n        \r\n        if (json.code === \"EREQUEST\") {\r\n          this.setState({\r\n            error: json.originalError.info.message,\r\n            alert: true,\r\n          });\r\n        } else {\r\n          if (this.state.files){\r\n            this.handleFileUpload(json[2][0].Specimen_ID)\r\n          }\r\n          this.props.getLastWD(this.state.newSpecimen.WD_Num);\r\n          this.setState({\r\n            alert: true,\r\n            error: \"\",\r\n            newSpecimen: {},\r\n            files: [],\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert (\"Something happened in fetch \" + putURL +  \" : \" + error)\r\n    });\r\n    this.handleConfirmClose();\r\n    this.dialogContent.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  /* Quality of Life Helper Functions */\r\n  isEmpty(obj) {\r\n    for (var key in obj) {\r\n      if (obj[key] !== null) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isOrganism = (fieldName) => {\r\n    if (\r\n      fieldName === \"Class\" ||\r\n      fieldName === \"Subclass\" ||\r\n      fieldName === \"Order\" ||\r\n      fieldName === \"Suborder\" ||\r\n      fieldName === \"Family\" ||\r\n      fieldName === \"Subfamily\" ||\r\n      fieldName === \"Subgenus\" ||\r\n      fieldName === \"Subspecies\" ||\r\n      fieldName === \"Variety\" ||\r\n      fieldName === \"Common_Name\" ||\r\n      fieldName === \"Binomial_Nomenclature\" ||\r\n      fieldName === \"Previous_Designation\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /* ORGANISM FUNCTIONS */\r\n\r\n  async getOrganismList(e) {\r\n    var URL = this.props.APIURL + \"organism/auto/\" + e.target.value;\r\n    if (e.target.value) {\r\n      await fetch(URL)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          var keys = Object.getOwnPropertyNames(json[0]);\r\n          this.setState({\r\n            organisms: json,\r\n            organismFieldList: keys,\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert (\"Something happened in fetch \" + URL +  \" : \" + error)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSelectedOrganism = (v) => {\r\n    this.setState({\r\n      selectedOrganism: {\r\n        ...v,\r\n      },\r\n      newSpecimen: {\r\n        ...this.state.newSpecimen,\r\n        ...v,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleFiles(files){\r\n\t\tthis.setState({\r\n\t\t  files: files\r\n\t\t});\r\n  };\r\n  \r\n  handleFileUpload = async (ID) => {\r\n\t\tconst files = this.state.files\r\n\t\tconst formData = new FormData()\r\n\t\tvar PUTURL = this.props.APIURL + \"upload/\" + this.props.database + \"/\" + ID\r\n\t\tconsole.log(PUTURL)\r\n\t\tlet i;\r\n\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\tformData.append('attachment', files[i])\r\n\t\t}\r\n\t\t//fetch(this.props.APIRUL + '/upload/' + PK, {\r\n\t\tawait fetch(PUTURL, {\r\n\t\t  method: 'POST',\r\n\t\t  body: formData\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t  console.log(\"handleFileUpload POST response: \", data)\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t  console.error(error)\r\n\t\t})\r\n\t\t\r\n\t}\r\n\r\n  render() {\r\n    const { database, fields, lastWD, lastNFWFL_Num, lastCrim } = this.props;\r\n    const { error, selectedOrganism } = this.state;\r\n    var alertmessage, severity;\r\n    if (error) {\r\n      alertmessage = error;\r\n      severity = \"error\";\r\n    } else {\r\n      alertmessage = \"Success!\";\r\n      severity = \"success\";\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={() => this.handleClickOpen()}\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"outlined\"\r\n          endIcon={<AddCircleIcon />}\r\n          style={{marginBottom: \"10px\"}}\r\n        >\r\n          Add New\r\n        </Button>\r\n\r\n        {/* ------- DIALOG -------- */}\r\n        <Dialog\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n          open={this.state.open} //determines if dialog is open\r\n          //onClose={this.handleClose} // the function that closes it\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Add New Specimen - {database}{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <div\r\n              ref={(node) => {\r\n                this.dialogContent = node;\r\n              }}\r\n            >\r\n              <br />\r\n              <br />\r\n              <DialogContent>\r\n                {/* Alert for to display received errors. */}\r\n                <Collapse in={this.state.alert}>\r\n                  <Alert\r\n                    severity={severity}\r\n                    action={\r\n                      <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={this.closeAlert}\r\n                      >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    {alertmessage}\r\n                  </Alert>\r\n                </Collapse>\r\n\r\n                <fieldset>\r\n                  <legend>Search:</legend>\r\n                  <Autocomplete\r\n                    disableClearable={true}\r\n                    id=\"combo-box-demo\"\r\n                    options={this.state.organisms}\r\n                    getOptionLabel={(option) => {\r\n                      if (\r\n                        option.Class === null &&\r\n                        option.Order === null &&\r\n                        option.Family === null &&\r\n                        option[\"Binomial_Nomenclature\"] === null &&\r\n                        option.Common_Name === null\r\n                      ) {\r\n                        return \"Unknown. Select for details.\";\r\n                      } else {\r\n                      }\r\n                      var optionLabel = \"\";\r\n                      if (option.Class) {\r\n                        optionLabel += option.Class + \" \";\r\n                      }\r\n                      if (option.Subclass) {\r\n                        optionLabel += option.Subclass + \" \";\r\n                      }\r\n                      if (option.Order) {\r\n                        optionLabel += option.Order + \" \";\r\n                      }\r\n                      if (option.Suborder) {\r\n                        optionLabel += option.Suborder + \" \";\r\n                      }\r\n                      if (option.Binomial_Nomenclature) {\r\n                        optionLabel += option.Binomial_Nomenclature + \" \";\r\n                      }\r\n                      if (option.Family) {\r\n                        optionLabel += option.Family + \" \";\r\n                      }\r\n                      if (option.Subspecies) {\r\n                        optionLabel += option.Subspecies + \" \";\r\n                      }\r\n                      if (option.Common_Name) {\r\n                        optionLabel += '\"' + option.Common_Name + '\"';\r\n                      }\r\n\r\n                      return optionLabel;\r\n                    }}\r\n                    onChange={(event, value) =>\r\n                      this.handleSelectedOrganism(value)\r\n                    }\r\n                    fullWidth\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Search by Class, Order, Family, Binomial Nomenclature\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                          this.getOrganismList(e);\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </fieldset>\r\n\r\n                {fields.map((fieldName) => {\r\n                  if (\r\n                    fieldName === \"Specimen_ID\" ||\r\n                    fieldName === \"CREATED_TS\" ||\r\n                    fieldName === \"Organism_ID\" ||\r\n                    fieldName === \"MODIFIED_TS\"\r\n                  ) {\r\n                    return <div></div>;\r\n                  }\r\n                  if (this.isOrganism(fieldName)) {\r\n                    return (\r\n                      <TextField\r\n                        key={fieldName}\r\n                        disabled={false}\r\n                        id={fieldName}\r\n                        label={fieldName}\r\n                        defaultValue={selectedOrganism[fieldName]}\r\n                        value={this.state.newSpecimen[fieldName] || \"\"}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        style={{ paddingBottom: \"25px\" }}\r\n                        size=\"small\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        onChange={(e) => this.handleInput(e, fieldName)}\r\n                      ></TextField>\r\n                    );\r\n                  } else if (fieldName === \"NFWFL_Num\") {\r\n                    return (\r\n                      <TextField\r\n                      key={fieldName}\r\n                      id={fieldName}\r\n                      label={fieldName}\r\n                      helperText={\r\n                        fieldName === \"NFWFL_Num\" && database === \"Herpetology\"\r\n                          ? \"Last specimen: \" + lastNFWFL_Num\r\n                          : \"\"\r\n                      }\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      style={{ paddingBottom: \"25px\" }}\r\n                      size=\"small\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      //onChange={e => this.handleInput(e, fieldName)}\r\n                      onBlur={(e) => this.handleInput(e, fieldName)}\r\n                    ></TextField>\r\n                    )\r\n                  } else if (fieldName === \"CRIM_Num\") {\r\n                    return (\r\n                      <TextField\r\n                      key={fieldName}\r\n                      id={fieldName}\r\n                      label={fieldName}\r\n                      helperText={\r\n                        fieldName === \"CRIM_Num\" && database === \"Criminalistics\"\r\n                          ? \"Last specimen: \" + lastCrim\r\n                          : \"\"\r\n                      }\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      style={{ paddingBottom: \"25px\" }}\r\n                      size=\"small\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      //onChange={e => this.handleInput(e, fieldName)}\r\n                      onBlur={(e) => this.handleInput(e, fieldName)}\r\n                    ></TextField>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <TextField\r\n                        key={fieldName}\r\n                        id={fieldName}\r\n                        label={fieldName}\r\n                        helperText={\r\n                          fieldName === \"WD_Num\" && database === \"Xylarium\"\r\n                            ? \"Last specimen: \" + lastWD\r\n                            : \"\"\r\n                        }\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        style={{ paddingBottom: \"25px\" }}\r\n                        size=\"small\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        //onChange={e => this.handleInput(e, fieldName)}\r\n                        onBlur={(e) => this.handleInput(e, fieldName)}\r\n                      ></TextField>\r\n                    );\r\n                  }\r\n                })}\r\n\r\n                <fieldset>\r\n                  <legend><center>Upload:</center></legend>\r\n                  <DropzoneArea\r\n                    onChange={this.handleFiles.bind(this)}\r\n                  />\r\n\t\t\t\t        </fieldset>\r\n              </DialogContent>\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n            <Button onClick={this.handleConfirmOpen} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* CONFIRMATION DIALOG */}\r\n\r\n        <Dialog\r\n          open={this.state.confirmDialogOpen}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            Confirm New Specimen\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {Object.keys(this.state.newSpecimen).map((fieldName) => {\r\n                if (\r\n                  fieldName === \"MODIFIED_BY\" ||\r\n                  fieldName === \"MODIFIED_TS\" ||\r\n                  fieldName === \"CREATED_BY\" ||\r\n                  fieldName === \"CREATED_TS\" ||\r\n                  fieldName === \"Organism_ID\" ||\r\n                  this.state.newSpecimen[fieldName] === null\r\n                ) {\r\n                  return \"\";\r\n                } else {\r\n                  return (\r\n                    <div key={fieldName}>\r\n                      <li key={fieldName}>\r\n                        <b>{fieldName}</b>: {this.state.newSpecimen[fieldName]}\r\n                      </li>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleConfirmClose} color=\"primary\" autoFocus>\r\n              Resume Editing\r\n            </Button>\r\n            <Button onClick={this.handleAddNew} color=\"primary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* UNSAVED CHANGES DIALOG */}\r\n\r\n        <Dialog\r\n          open={this.state.unsavedOpen}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Navigating away from new specimen input!\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            You are navigating away without saving these changes!\r\n            {Object.keys(this.state.newSpecimen).map((fieldName) => {\r\n              if (\r\n                fieldName === \"MODIFIED_BY\" ||\r\n                fieldName === \"MODIFIED_TS\" ||\r\n                fieldName === \"CREATED_BY\" ||\r\n                fieldName === \"CREATED_TS\" ||\r\n                fieldName === \"Organism_ID\"\r\n              ) {\r\n                return \"\";\r\n              } else {\r\n                return (\r\n                  <div key={fieldName}>\r\n                    <li key={fieldName}>\r\n                      <b>{fieldName}</b>: {this.state.newSpecimen[fieldName]}\r\n                    </li>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDiscard} color=\"primary\" autoFocus>\r\n              Discard Changes\r\n            </Button>\r\n            <Button onClick={this.handleUnsavedClose} color=\"primary\">\r\n              Continue Entry\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Add;\r\n","import React, { Component } from \"react\";\r\nimport { JsonToTable } from \"react-json-to-table\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CsvParse from \"@vtex/react-csv-parse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass BulkAdd extends Component {\r\n  state = {\r\n    disableSave: false, //to prevent double click of Save when bulk is loading\r\n    bulkOpen: false,\r\n    alert: false,\r\n    error: \"\",\r\n    errorObj: {},\r\n    loading: false,\r\n    bulkSpecimen: [],\r\n    csvXyFields: [\r\n      \"Binomial_Nomenclature\",\r\n      \"WD_Num\",\r\n      \"Collection_Num\",\r\n      \"Other_Nums\",\r\n      \"Previous_Collection\",\r\n      \"Collector\",\r\n      \"Source_Type\",\r\n      \"Wild_Cultivated\",\r\n      \"Specimen_Description\",\r\n      \"Heartwood_Sapwood\",\r\n      \"Notes\",\r\n      \"Color\",\r\n      \"NFWFL_Analyzed\",\r\n      \"Catalogued_By\",\r\n      \"Continent\",\r\n      \"Country\",\r\n      \"State\",\r\n      \"Locality\",\r\n      \"Lat_Long\",\r\n      \"Family\",\r\n      \"Previous_Designation\",\r\n      \"Common_Name\",\r\n      \"Sample_Location\",\r\n      \"Subspecies\",\r\n    ],\r\n    csvCrimFields: [\r\n      \"Binomial_Nomenclature\",\r\n      \"CRIM_Num\",\r\n      \"Collection_Num\",\r\n      \"Other_Names\",\r\n      \"Previous_Collection\",\r\n      \"Collector\",\r\n      \"Source_Type\",\r\n      \"Wild_Cultivated\",\r\n      \"Specimen_Description\",\r\n      \"Notes\",\r\n      \"Color\",\r\n      \"NFWFL_Analyzed\",\r\n      \"Catalogued_By\",\r\n      \"Continent\",\r\n      \"Country\",\r\n      \"State\",\r\n      \"Locality\",\r\n      \"Lat_Long\",\r\n      \"Family\",\r\n      \"Previous_Designation\",\r\n      \"Common_Name\",\r\n      \"Sample_Location\",\r\n      \"Subspecies\",\r\n    ],\r\n    csvHerpFields: [\r\n      \"Binomial_Nomenclature\",\r\n      \"Class\",\r\n      \"Subclass\",\r\n      \"Order\",\r\n      \"Suborder\",\r\n      \"Family\",\r\n      \"Subfamily\",\r\n      \"Subgenus\",\r\n      \"Subspecies\",\r\n      \"Variety\",\r\n      \"Common_Name\",\r\n      \"Previous_Designation\",\r\n      \"Specimen_Sex\",\r\n      \"Specimen_Age\",\r\n      \"NFWFL_Num\",\r\n      \"REP_Num\",\r\n      \"Deaccessioned_To\",\r\n      \"Deaccessioned_Reason\",\r\n      \"Material\",\r\n      \"Prep_By\",\r\n      \"Specimen_Owner\",\r\n      \"Accession_Num\",\r\n      \"ESA\",\r\n      \"CITES\",\r\n      \"Document_Reference\",\r\n      \"Locality_Desc\",\r\n      \"Location_Desc\",\r\n    ],\r\n  };\r\n\r\n  handleChange = (k, v) => this.setState({ [k]: v });\r\n\r\n  handleBulkOpen = () => {\r\n    this.setState({\r\n      bulkOpen: true,\r\n    });\r\n  };\r\n\r\n  handleBulkClose = () => {\r\n    this.handleChange(\"bulkOpen\", false);\r\n    this.handleChange(\"bulkSpecimen\", []);\r\n    this.closeAlert();\r\n  };\r\n\r\n  handleCSVParse = (e) => {\r\n    //careful of this. might need to hand this even outside.\r\n    this.setState({\r\n      bulkSpecimen: e,\r\n    });\r\n  };\r\n\r\n  disableAndSave = () => {\r\n    this.handleChange(\"loading\", true);\r\n    this.handleBulkSave();\r\n  };\r\n\r\n  handleBulkSave = () => {\r\n    const { bulkSpecimen } = this.state;\r\n    var putURL = this.props.APIURL + this.props.database + \"/update\";\r\n    fetch(putURL, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(bulkSpecimen),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json.code === \"EREQUEST\") {\r\n          this.setState({\r\n            error: json.originalError.info.message,\r\n            alert: true,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            alert: true,\r\n            error: \"\",\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert (\"Something happened in fetch \" + putURL +  \" : \" + error)\r\n    });\r\n  };\r\n\r\n  isEmpty(obj) {\r\n    for (var key in obj) {\r\n      if (obj[key] !== null) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  closeAlert = () => {\r\n    this.setState({\r\n      alert: false,\r\n      error: undefined,\r\n    });\r\n  };\r\n  render() {\r\n    const { error, bulkSpecimen, loading } = this.state;\r\n    const { database } = this.props;\r\n    var alertmessage, severity;\r\n    if (error) {\r\n      alertmessage = error;\r\n      severity = \"error\";\r\n    } else {\r\n      alertmessage = \"Success!\";\r\n      severity = \"success\";\r\n    }\r\n\r\n    if (bulkSpecimen.length > 500) {\r\n        var bulkPreview = bulkSpecimen.slice(0,499);\r\n    }\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"primary\"\r\n          disableElevation\r\n          variant=\"outlined\"\r\n          endIcon={<LibraryAddIcon />}\r\n          //style={{ float: \"center\", margin: \"25px\" }}\r\n          onClick={(e) => this.handleBulkOpen()}\r\n          style={{marginBottom: \"10px\"}}\r\n        >\r\n          Bulk Add\r\n        </Button>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          maxWidth=\"md\"\r\n          open={this.state.bulkOpen} //determines if dialog is open\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Bulk Upload - {database}{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <Collapse in={this.state.alert}>\r\n              <Alert\r\n                severity={severity}\r\n                action={\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    color=\"inherit\"\r\n                    size=\"small\"\r\n                    onClick={this.closeAlert}\r\n                  >\r\n                    <CloseIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                }\r\n              >\r\n                {alertmessage}\r\n              </Alert>\r\n            </Collapse>\r\n            Please use this template for {database} specimen:{\" \"}\r\n            {database === \"Herpetology\" ? (\r\n              <a href=\"./Herpetology_Template.csv\" download=\"./Herpetology_Template.csv\">\r\n                Herpetology Template\r\n              </a>\r\n            ) : database === \"Xylarium\" ? (\r\n              <a\r\n                href=\"./Xylarium_Template.csv\"\r\n                download=\"./Xylarium_Template.csv\"\r\n              >\r\n                Xylarium Template\r\n              </a>\r\n              ) : (\r\n                <a\r\n                href=\"./Criminalistics_Template.csv\"\r\n                download=\"./Criminalistics_Template.csv\"\r\n              >\r\n                Criminalistics Template\r\n              </a>\r\n            )}\r\n            <br />\r\n            {database === \"Xylarium\"\r\n              ? \"Latest Specimen: \" + this.state.lastWD\r\n              : \"\"}{\" \"}\r\n            <br />\r\n            Page may become unresponsive when loading large CSVs. If it does,\r\n            select 'Wait' and give it up to 5 minutes. \r\n            <br />\r\n            <CsvParse\r\n              keys={\r\n                database === \"Herpetology\"\r\n                  ? this.state.csvHerpFields\r\n                  : database === \"Xylarium\" ? this.state.csvXyFields : this.state.csvCrimFields\r\n              }\r\n              onDataUploaded={this.handleCSVParse}\r\n              render={(onChange) => <input type=\"file\" onChange={onChange} />}\r\n            />\r\n            <br />\r\n            <DialogContentText>\r\n              Please review your additions below and click 'Save' to confirm:{\" \"}\r\n            </DialogContentText>\r\n            {/* This JsonToTable component is causing a fkton of errors in the browser console, but no data errors. */}\r\n            <JsonToTable json={bulkPreview ? bulkPreview : bulkSpecimen} />\r\n          </DialogContent>\r\n          <DialogActions> \r\n            <Button\r\n              onClick={this.handleBulkClose}\r\n              disabled={loading}\r\n              color=\"primary\"\r\n            >\r\n              Close\r\n            </Button>\r\n            {/*             <Button onClick={this.handleBulkSave} color=\"primary\">\r\n              Save\r\n            </Button> */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loading}\r\n              onClick={this.disableAndSave}\r\n            >\r\n              Save\r\n              {loading && <CircularProgress size={24} />}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BulkAdd;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/NavBar'\r\nimport Search from './components/Search'\r\nimport UpdateOrganism from './components/UpdateOrganism'\r\nimport TaxSyn from './components/TaxSyn';\r\nimport Results from './components/Results';\r\nimport Add from './components/Add';\r\nimport BulkAdd from './components/BulkAdd';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      loading: false,\r\n      database: \"Herpetology\",\r\n      organismFieldList: [],\r\n      APIURL: \"https://fwsfl-demo.herokuapp.com/\",\r\n      data: [],\r\n      fields: [],\r\n      lastWD: \"\",\r\n      searchTerm: \"\",\r\n      field: \"\",\r\n      lastNFWFL: \"\",\r\n      lastCrim: \"\",\r\n    };\r\n    \r\n  }\r\n\r\n  handleChange = (k, v) => this.setState({ [k]: v });\r\n\r\n/*   componentDidMount() {\r\n    //for autocomplete... hopefully.\r\n    this.setState({\r\n      isLoaded: true\r\n    });\r\n    this.getOrganismFieldList();\r\n    } */\r\n\r\n  // this puts the database at a higher parent level.\r\n  setAppDB=(DB)=>{this.setState({database: DB, data: []})}\r\n\r\n  setAppFields=(f)=>{this.setState({fields: f})}\r\n\r\n  getLastWD=(WD_Num)=>{this.setState({lastWD: WD_Num})}\r\n  \r\n  getLastNFWFL_Num=(NFWFL_Num)=>{this.setState({lastNFWFL: NFWFL_Num})}\r\n\r\n  getLastCrim=(CRIM_Num)=>{this.setState({lastCrim: CRIM_Num})}\r\n\r\n  setOrganismFields=(org)=>{this.setState({organismFieldList: org})}\r\n\r\n\r\n  handleSearch = (dropdownValue, searchValue) => {\r\n    const { database} = this.state;\r\n    this.handleChange(\"loading\", true);\r\n    var address = this.state.APIURL;\r\n    var fetchURL = \" \";\r\n\r\n    //determine whether a search term was entered\r\n    //if not, return all records from the database\r\n    if (searchValue === \"\") {\r\n      fetchURL = address + database;\r\n    } else {\r\n      fetchURL =\r\n        address + database + \"/search/\" + dropdownValue + \"/\" + searchValue;\r\n    }\r\n\r\n    fetch(fetchURL)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.handleChange(\r\n          \"data\",\r\n          database === \"Herpetology\" ? json[0] : json.recordsets[0]\r\n        );\r\n        this.handleChange(\"searchTerm\", searchValue);\r\n        this.handleChange(\"field\", dropdownValue);\r\n        this.handleChange(\"loading\", false);\r\n      });\r\n\r\n      if (database === \"Xylarium\"){\r\n        fetch(address + database + \"/lastWD\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.recordsets[0][0] === undefined){\r\n            this.getLastWD(\"No Previous Specimen - No Xylarium records exist or DB not connected.\");\r\n          } else {\r\n            if (this.state.lastWD !== json.recordsets[0][0].WD_Num){\r\n              this.handleChange(\r\n                \"lastWD\",\r\n                json.recordsets[0][0].WD_Num\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert (\"ERROR - xy\", error)\r\n        });\r\n      }\r\n      else if (database === \"Herpetology\"){\r\n        fetch(address + database + \"/lastNFWFL_Num\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json[0][0] === undefined){\r\n            this.getLastNFWFL_Num(\"No Previous Specimen - No Herpetology records exist or DB not connected.\");\r\n          } else {\r\n            if (this.state.lastNFWFL !== json[0][0].NFWFL_Num){\r\n              this.handleChange(\r\n                \"lastNFWFL\",\r\n                json[0][0].NFWFL_Num\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          alert (\"ERROR - herp\", error)\r\n        });\r\n      }\r\n      else if (database === \"Criminalistics\"){\r\n        fetch(address + database + \"/lastCrim\")\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.recordsets[0][0] === undefined){\r\n            this.getLastCrim(\"No Previous Specimen - No Criminalistics records exist or DB not connected.\");\r\n          } else {\r\n            if (this.state.lastNFWFL !== json.recordsets[0][0].CRIM_Num){\r\n              this.handleChange(\r\n                \"lastCrim\",\r\n                json.recordsets[0][0].CRIM_Num\r\n              );\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          alert (\"ERROR crim- \", error)\r\n        });\r\n      }\r\n  };\r\n\r\n\r\n  render() {\r\n    const {APIURL, data, fields, database, lastWD, searchTerm, field, organismFieldList, loading, lastNFWFL, lastCrim} = this.state;\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"header\">\r\n            <Navbar database={database} />\r\n          </div>\r\n\r\n          <div className=\"buttons\" align=\"right\">\r\n            <div className=\"Add\">\r\n              <Add database={database} fields={fields.map((field) => field.COLUMN_NAME)} lastWD={lastWD} lastNFWFL_Num={lastNFWFL} lastCrim={lastCrim} getLastCrim={this.getLastCrim} getLastNFWFL_Num={this.getLastNFWFL_Num} getLastWD={this.getLastWD} APIURL={APIURL} />\r\n            </div>\r\n\r\n            <div className=\"BulkAdd\">\r\n              <BulkAdd database={database} APIURL={APIURL}/>\r\n            </div>\r\n\r\n            <div className=\"UpdateSciName\">\r\n              <UpdateOrganism database={database} APIURL={APIURL}/>\r\n            </div>\r\n\r\n            <div className=\"TaxonomicSynonyms\">\r\n              <TaxSyn database={database} APIURL={APIURL} organismFieldList={organismFieldList}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <Search setAppDB={this.setAppDB} setAppFields={this.setAppFields} getLastWD={this.getLastWD} getLastNFWFL_Num={this.getLastNFWFL_Num} getLastCrim={this.getLastCrim} setOrganismFields={this.setOrganismFields} handleSearch={this.handleSearch} loading={loading} APIURL={APIURL}/>\r\n          </div>\r\n\r\n          <div className=\"results\">\r\n            <Results\r\n              data={data}\r\n              fields={fields.map((field) => field.COLUMN_NAME)}\r\n              database={database}\r\n              handleSearch={this.handleSearch}\r\n              APIURL={APIURL}\r\n              field={field}\r\n              searchTerm={searchTerm}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));  //insers App.js into the got element div 'root'\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}